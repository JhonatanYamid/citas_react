{"version":3,"sources":["components/Citas.js","components/Formulario.js","App.js","reportWebVitals.js","index.js"],"names":["Cita","cita","eliminarCita","className","mascota","propietario","fecha","hora","sintomas","onClick","id","Formulario","crearCita","useState","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","onSubmit","preventDefault","trim","uuid","type","placeholder","onChange","propTypes","PropTypes","func","isRequired","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6bde945.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cita = ({ cita, eliminarCita }) => (\r\n    <div className=\"cita\">\r\n        <p>Mascota: <span>{cita.mascota}</span></p>\r\n        <p>Propietario: <span>{cita.propietario}</span></p>\r\n        <p>Fecha: <span>{cita.fecha}</span></p>\r\n        <p>Hora: <span>{cita.hora}</span></p>\r\n        <p>Sintomas: <span>{cita.sintomas}</span></p>\r\n        <button\r\n            className=\"button eliminar u-full-width\"\r\n            onClick={() => eliminarCita(cita.id)}\r\n        >\r\n            Eliminar &times;\r\n        </button>\r\n    </div>\r\n)\r\n\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Cita;","import React, { Fragment, useState } from 'react';\r\nimport uuid from 'uuid/dist/v4';\r\n\r\nconst Formulario = ({ crearCita }) => {\r\n\r\n    //Crear State de Citas\r\n    const [cita, actualizarCita] = useState({\r\n        mascota: '',\r\n        propietario: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n    });\r\n\r\n    //Destructuring\r\n    const { mascota, propietario, fecha, hora, sintomas } = cita;\r\n\r\n    //Crear State Error\r\n    const [error, actualizarError] = useState(false)\r\n\r\n    //Function actualizar cita\r\n    const actualizarState = e => {\r\n        actualizarCita({\r\n            ...cita,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //Function Evento enviar\r\n    const submitCita = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if (mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '') {\r\n            actualizarError(true)\r\n            return;\r\n        }\r\n\r\n        //Eliminar mensaje de error\r\n        actualizarError(false)\r\n\r\n        //Agregar id\r\n        cita.id = uuid();\r\n\r\n        //Crear cita\r\n        crearCita(cita)\r\n\r\n        //Reiniciar formulario\r\n        actualizarCita({\r\n            mascota: '',\r\n            propietario: '',\r\n            fecha: '',\r\n            hora: '',\r\n            sintomas: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Crear Cita</h2>\r\n            {error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null}\r\n            <form\r\n                onSubmit={submitCita}\r\n            >\r\n                <label>Nombre Mascota</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mascota\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre mascota\"\r\n                    onChange={actualizarState}\r\n                    value={mascota}\r\n\r\n                />\r\n                <label>Nombre Dueño</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"propietario\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre dueño de la mascota\"\r\n                    onChange={actualizarState}\r\n                    value={propietario}\r\n\r\n                />\r\n                <label>Fecha</label>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={fecha}\r\n\r\n                />\r\n                <label>Hora</label>\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={hora}\r\n\r\n                />\r\n                <label>Sintomas</label>\r\n                <textarea\r\n                    name=\"sintomas\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={sintomas}\r\n                ></textarea>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"u-full-width button-primary\"\r\n                    onChange={actualizarState}\r\n                >\r\n                    Agregar cita\r\n                </button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Formulario;","import { Fragment, useState, useEffect } from \"react\";\nimport Cita from \"./components/Citas\";\nimport Formulario from \"./components/Formulario\";\nimport PropTypes from 'prop-types';\n\nfunction App() {\n\n  //Citas en local storage\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'))\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n  //Arreglo citas\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  //Evento cambio de state\n  useEffect(() => {\n    if (citasIniciales) {\n      localStorage.setItem('citas', JSON.stringify(citas))\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]))\n    }\n  }, [citas, citasIniciales])\n\n  //function agregar citas\n  const crearCita = cita => {\n    guardarCitas([\n      ...citas,\n      cita\n    ]);\n  }\n\n  //Function eliminar citas\n  const eliminarCita = id => {\n    const nuevasCitas = citas.filter(cita => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  }\n\n  //Mensaje condicional\n  const titulo = citas.length === 0 ? 'No hay citas' : 'Administra tus citas'\n\n  return (\n    <Fragment>\n      <h1>Administrador de pacientes</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario\n              crearCita={crearCita}\n            />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map(cita => (\n              <Cita\n                key={cita.id}\n                cita={cita}\n                eliminarCita={eliminarCita}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nFormulario.propTypes = {\n  crearCita: PropTypes.func.isRequired\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}